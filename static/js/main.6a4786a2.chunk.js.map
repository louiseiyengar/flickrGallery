{"version":3,"sources":["components/SearchForm.js","components/Header.js","components/Nav.js","components/NotFound.js","components/photos/GalleryItem.js","components/photos/LoadingPhotos.js","components/photos/NoPhotos.js","components/photos/Gallery.js","config.js","components/App.js","components/Footer.js","index.js"],"names":["SearchForm","handleSubmit","e","preventDefault","searchItem","_this","value","props","search","path","concat","history","push","_this2","this","react_default","a","createElement","className","onSubmit","type","name","placeholder","ref","input","required","fill","height","viewBox","width","xmlns","d","Component","Header","getSearchText","searchText","thisPath","location","pathname","buttonText","indexOf","replace","react_router","render","components_SearchForm","Object","assign","Nav","react_router_dom","exact","to","NotFound","GalleryItem","src","url","alt","LoadingPhotos","NoPhotos","Gallery","photos","galleryList","gallery","loading","photos_LoadingPhotos","length","map","photo","photos_GalleryItem","key","id","photos_NoPhotos","apiKey","App","state","button1","button2","button3","initialSearchTerms","initialSearch","queries","apiRequests","setState","term","encodeURIComponent","i","fetch","then","response","json","Promise","all","responseData","handlePhotoResponse","catch","error","console","log","searchFormSearch","query","performSearch","arguments","undefined","searchName","imageData","_this$setState","photoArray","farm","server","secret","defineProperty","prevProps","prevPath","components_Header","components_Nav","photos_Gallery","component","React","Footer","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.6a4786a2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass SearchForm extends Component {\r\n\r\n  /*\r\n    This method will execute a call back search (the method passed in this.props.ssearch) and \r\n    so an API request will be made for Flickr photos for that search term.\r\n    \r\n    It will also put the search term as a param in the URL.\r\n  */\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let searchItem = this.searchItem.value;\r\n    this.props.search(searchItem);\r\n    let path=`/search/${searchItem}`;\r\n    this.searchItem.value = '';\r\n    this.props.history.push(path);\r\n  }\r\n  \r\n  render () {\r\n    return (\r\n      <form className=\"search-form\" onSubmit={this.handleSubmit}>\r\n        <input type=\"search\" name=\"search\" placeholder=\"Search\" ref={(input) => this.searchItem = input } required/>\r\n        <button type=\"submit\" className=\"search-button\">\r\n          <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 23 23\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n          </svg>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForm","import React, { Component } from 'react';\r\nimport  {Route} from 'react-router-dom';\r\n\r\nimport SearchForm from './SearchForm';\r\n\r\nclass Header extends Component {\r\n\r\n  getSearchText = () => {\r\n    let searchText = \"A Flickr Photo Gallery of \";\r\n\r\n    const thisPath = this.props.location.pathname;\r\n\r\n    switch(thisPath) {\r\n      case '/button1':\r\n        searchText += this.props.buttonText[0]\r\n        break;\r\n      case '/button2':\r\n        searchText += this.props.buttonText[1]\r\n        break;\r\n      case '/button3':\r\n        searchText += this.props.buttonText[2]\r\n        break;\r\n      default:\r\n        if (thisPath.indexOf('/search/') > -1) { \r\n          searchText += thisPath.replace('/search/', '');\r\n        } else {\r\n          searchText = '';\r\n        }\r\n    }\r\n    return searchText;\r\n  }\r\n\r\n  render () {\r\n    this.getSearchText();\r\n    return (\r\n      <div className=\"header\">\r\n        <h2>{this.getSearchText()}</h2>\r\n        <Route render={ (props) => <SearchForm {...props} search={this.props.search} /> } />\r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {\r\n  NavLink\r\n} from 'react-router-dom'\r\n\r\nconst Nav =(props) => (\r\n    <nav className=\"main-nav\">\r\n      <ul>\r\n        <li><NavLink exact to='/button1'>{props.buttonText[0]}</NavLink></li>\r\n        <li><NavLink exact to='/button2'>{props.buttonText[1]}</NavLink></li>\r\n        <li><NavLink exact to='/button3'>{props.buttonText[2]}</NavLink></li>\r\n      </ul>\r\n    </nav>\r\n);\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div className=\"main-content not-found\">\r\n    <i className=\"material-icons icn-error\">error_outline</i>\r\n    <h1>404 Error - Page Not Found</h1>\r\n    <p>Please click a button above or enter a search term to view a <b>Flickr Photo Gallery</b>.</p>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\n\r\nconst GalleryItem = props => {\r\n  return (\r\n      <li>\r\n          <img src={props.url} alt=\"\" />\r\n      </li>\r\n  );\r\n}\r\n\r\nexport default GalleryItem;","import React from 'react';\r\n\r\nconst LoadingPhotos = props => {\r\n  return (\r\n    <div className=\"loading-photos\">\r\n      <h3>Please be Patient</h3>\r\n      <p>Photos are loading...</p>\r\n      <div className=\"loader\"></div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default LoadingPhotos;","import React from 'react';\r\n\r\nconst NoPhotos = props => {\r\n  return (\r\n    <li className=\"not-found\">\r\n        <h3>No Results Found</h3>\r\n        <p>You search did not return any results. Please try again.</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default NoPhotos;","import React from 'react';\r\nimport GalleryItem from './GalleryItem';\r\nimport LoadingPhotos from './LoadingPhotos';\r\nimport NoPhotos from './NoPhotos';\r\n\r\nconst Gallery = props => {\r\n  const galleryList = props.gallery;\r\n  let photos;\r\n\r\n  if (props.loading) {  \r\n    photos = <LoadingPhotos />\r\n  } else if (galleryList.length > 0) {\r\n    photos = galleryList.map((photo) =><GalleryItem key={photo.id} url={photo.url} />);\r\n  } else {\r\n    photos = <NoPhotos />\r\n  }\r\n\r\n  return(\r\n    <div className=\"photo-container\">\r\n      <ul>\r\n        {photos}\r\n      </ul> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Gallery;\r\n","const apiKey = 'db4c79895c24276b611a6f9ae4520c59';\nexport default apiKey;\n\n\n\n\n\n","import React from 'react';\r\nimport {Route, Redirect, Switch} from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Nav from './Nav';\r\nimport NotFound from './NotFound';\r\nimport Gallery from './photos/Gallery';\r\nimport apiKey from '../config.js';\r\n\r\nclass App extends React.Component {\r\n \r\n  state = {\r\n    button1: [],\r\n    button2: [],\r\n    button3: [],\r\n    search: [],\r\n    loading: true\r\n  }\r\n\r\n  // Terms for 'button' search - these are the terms that will appear on the buttons\r\n  initialSearchTerms = [\"Sunsets\", \"Perfume Bottles\", \"Lion Cubs\"];\r\n\r\n   /**\r\n   * This method is called after the API to Flickr has responded successfully.  It puts\r\n   * a photo id and creates a URL for each photo returned.  This information is saved to state.\r\n   * \r\n   * @param {string} searchName - either 'search', 'button1, button2, or button3\r\n   * @param {array} - array of JSON photo objects returned from API\r\n   */\r\n  handlePhotoResponse(searchName, imageData) {\r\n    const photoArray = imageData.photos.photo.map((photo) => {\r\n        return ({\r\n            id: photo.id,\r\n            url: `https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}_m.jpg`\r\n          })\r\n    });\r\n\r\n    this.setState({\r\n      [searchName]: photoArray,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n   /**\r\n   * This method makes three API calls to Flickr - for the terms on the three buttons.  The calls are \r\n   * made as three Promise.All fetchs.  Upon successful response, a method is call to save info for \r\n   * 24 photos to state \r\n   */\r\n  initialSearch = () => {\r\n    let queries = [];\r\n    const apiRequests = [];\r\n\r\n    this.setState({ loading: true }); //so that a loading page will appear before photos are received and loaded\r\n    queries = this.initialSearchTerms.map(term => encodeURIComponent(term));\r\n\r\n    for (let i = 0; i < queries.length; i++) {\r\n      apiRequests[i] = fetch(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${queries[i]}&per_page=24&format=json&nojsoncallback=1`)\r\n      .then(response => response.json());\r\n    }\r\n\r\n    Promise.all([apiRequests[0], apiRequests[1], apiRequests[2]])\r\n      .then(responseData => {\r\n        for (let i = 0; i < queries.length; i++) {\r\n          this.handlePhotoResponse(('button' + (i + 1)), responseData[i]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"There was an error retrieving data from Flickr:\", error);\r\n      });\r\n  }\r\n\r\n   /**\r\n   * This method the API call to Flickr a term entered in the Search Form. \r\n   * Upon successful response, a method is call to save info for \r\n   * 24 photos to state \r\n   */\r\n  searchFormSearch = (query) => {\r\n    this.setState({ loading: true }); //so that a loading page will appear before photos are received and loaded\r\n\r\n    fetch(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${encodeURIComponent(query)}&per_page=24&format=json&nojsoncallback=1`)\r\n      .then(response => response.json())\r\n      .then(responseData => {\r\n        this.handlePhotoResponse('search', responseData);\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"There was an error retrieving data from Flickr:\", error);\r\n    });\r\n  }\r\n\r\n  performSearch = (query = 'initial setup') => {\r\n    if (query === 'initial setup') {\r\n      this.initialSearch();\r\n    } else {\r\n      this.searchFormSearch(query);\r\n      if (this.state.button1.length < 1) {\r\n        this.initialSearch();\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n    This will execute the intial search for the site - the query is either the intials setup search for the three buttons\r\n    //or the term entered in the search form, which will be a param in the URL.\r\n  */\r\n  componentDidMount() {\r\n    const thisPath = this.props.location.pathname;\r\n    const query = (thisPath.indexOf('/search/') > -1) ? thisPath.replace('/search/', '') : 'initial setup';\r\n    this.performSearch(query);\r\n  }\r\n\r\n  /*\r\n    This will execute a s new API request if the back or forward browser history button is pressed and\r\n    the URL contains a search parameter for a term entered in the search form  \r\n  */\r\n  componentDidUpdate(prevProps) {\r\n    const prevPath = prevProps.location.pathname;\r\n    const thisPath = this.props.location.pathname;\r\n    \r\n    if (thisPath.indexOf('/search/') > -1) {\r\n      if (thisPath !== prevPath) {\r\n        const query = thisPath.replace('/search/', '')\r\n        this.performSearch(query);\r\n      }\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"container\">\r\n        <Route\r\n          render={ (props) => <Header {...props} \r\n                    buttonText={this.initialSearchTerms} \r\n                    search={this.performSearch} \r\n        />} />\r\n        <Route\r\n          render={ () => <Nav buttonText={this.initialSearchTerms} />} />\r\n        <Route exact path='/' \r\n          render={ () => <Redirect to=\"/button1\" />} />\r\n        <Switch>  \r\n          <Route path=\"/button1\" \r\n              render={ () => <Gallery gallery={this.state.button1} loading={this.state.loading} /> } />\r\n          <Route path=\"/button2\" \r\n              render={ () => <Gallery gallery={this.state.button2} loading={this.state.loading} /> } />\r\n          <Route path=\"/button3\" \r\n              render={ () => <Gallery gallery={this.state.button3} loading={this.state.loading} /> } />\r\n          <Route path=\"/search/:searchTerm\"\r\n              render={ () => <Gallery gallery={this.state.search} loading={this.state.loading} /> } />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nconst Footer =(props) => (\r\n    <footer>\r\n      <div>\r\n       &copy; Louise Iyengar - Treehouse FSJS - Learning React\r\n      </div>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","/*\r\n    Treehouse FSJS - Project 7\r\n    This project uses Reart and Rearch Router DOM 4 to display\r\n    24 images received from the Flickr Photo API.\r\n\r\n    The project contains 3 buttons and also allows users to input search terms\r\n*/\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport './css/index.css';\r\nimport App from './components/App';\r\nimport Footer from './components/Footer';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Route path=\"/\" \r\n        render={ (props) => <App {...props} />} />\r\n    {/* Footer is rendered here so it appears outside the container div - so there will be sticky footer for 404 and loading pages */}\r\n    <Route component={Footer} />\r\n  </BrowserRouter>, document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}